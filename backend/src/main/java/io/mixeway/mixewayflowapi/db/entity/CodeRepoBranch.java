package io.mixeway.mixewayflowapi.db.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.Getter;

import java.util.Objects;

@Entity
@Getter
@Table(name = "coderepo_branch")
public final class CodeRepoBranch {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private final long id;

    @NotBlank
    @Size(max = 200, message = "Name must be at most 200 characters long")
    @Column(nullable = false)
    private final String name;

    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "coderepo_id", nullable = false)
    @JsonIgnore
    private final CodeRepo codeRepo;

    // Private constructor for JPA
    protected CodeRepoBranch() {
        this.id = 0;
        this.name = null;
        this.codeRepo = null;
    }

    // Public constructor for creating new instances
    public CodeRepoBranch(String name, CodeRepo codeRepo) {
        this.id = 0; // ID will be generated by the database
        this.name = name;
        this.codeRepo = codeRepo;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        CodeRepoBranch that = (CodeRepoBranch) o;
        return Objects.equals(name, that.name) &&
                Objects.equals(codeRepo, that.codeRepo);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name);
    }
}
