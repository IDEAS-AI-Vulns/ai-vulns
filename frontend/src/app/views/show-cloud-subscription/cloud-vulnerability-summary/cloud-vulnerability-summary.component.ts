import { Component, Input, OnInit } from '@angular/core';
import {
  ColComponent,
  RowComponent,
  WidgetStatFComponent
} from '@coreui/angular';
import { IconDirective } from '@coreui/icons-angular';
import { NgIf } from '@angular/common';

@Component({
  selector: 'app-cloud-vulnerability-summary',
  standalone: true,
  imports: [
    RowComponent,
    ColComponent,
    WidgetStatFComponent,
    IconDirective,
    NgIf
  ],
  templateUrl: './cloud-vulnerability-summary.component.html',
  styleUrls: ['./cloud-vulnerability-summary.component.scss']
})
export class CloudVulnerabilitySummaryComponent implements OnInit {
  @Input() counts: any = {
    critical: 0,
    high: 0,
    rest: 0
  };

  @Input() icons: any;

  ngOnInit(): void {
    // Initialize icons if not provided
    if (!this.icons) {
      this.icons = {
        cilBug: {name: 'cil-bug'},
        cilCenterFocus: {name: 'cil-center-focus'},
        cilCommentSquare: {name: 'cil-comment-square'},
        cilWrench: {name: 'cil-wrench'},
        cilCheckAlt: {name: 'cil-check-alt'}
      };

      this.counts = {
        critical: this.counts?.critical || 0,
        high: this.counts?.high || 0,
        rest: this.counts?.rest || 0
      }
    }
  }

  /**
   * Calculate the total number of vulnerabilities
   */
  getTotalCount(): number {
    return (this.counts?.critical || 0) +
        (this.counts?.high || 0) +
        (this.counts?.rest || 0);
  }

  /**
   * Calculate percentage of a specific vulnerability type
   */
  getPercentage(count: number): number {
    const total = this.getTotalCount();
    if (total === 0) return 0;

    return Math.round((count / total) * 100);
  }
}